

truffle init  =  기본셋팅을 해주는 명령어.
truffle compile = 작성한 솔리디티 언어를 바이트코드로 변환시켜주는 명령어 (결과물 ABI로 나온다.)
truffle migrate --network {네트워크명} == 지정된 타켓네트워크로 배포를 해주는 명령어 
truffle migrate --network {네트워크명} --reset
truffle networks = 배포한 컨트랙트의 주소를 확인할 수 있다.
truffle migrate --compile-all --reset --network {네트워크이름} = 한번에 컴파일과 배포를 해주는 명령어 


배포된 내용을 콘솔에서 확인해볼 수 있는 명려어들 
truffle console --network development  == (지정된 네트워크로 연결해서 console창을 열어줍니다.)

//콘솔창 안에서 사용할 수 있는 명령어 

 {변수명} = await {컨트랙트 이름}.deployed()  == 현재 배포된 인스턴스를 받아오는 명령어 
 Undefined가 뜨면 잘 받아온것입니다.

   ex) hello = await Helloworld.deployed()

  // 컨트랙트에 작성된 함수를 이제 사용할 수 있다. say()함수 예시 참조 
  hello.say()
  hello.setGreeting.estimateGas("bye") ==  bye라고 바꿀 때 사용되는 가스비 측정 해보는 메서드





  //// 테스트를 할때 사용하는 명령어 정리 
  truffle test ./test/Helloworld.js == test contract를 실행시켜보는 함수.  * 폴더위치 파일명 주의 *